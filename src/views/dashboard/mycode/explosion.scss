$numRings: 100;
$start: 50px;
$end: $start + 250px;
$pulseDur: 1.5;
// $color1: mix(saturate(lighten(red, 30%), 40%), blue, 40%);
$color1: mix(saturate(lighten(red, 30%), 40%), blue, 40%);
$color2: saturate(lighten(cyan, 20%), 10%);
$dot-size: 0;
$ease: ease-in-out;

@function randomNum($min, $max) {
  $rand: random();
  $randomNum: $min + floor($rand * (($max - $min) + 1));
  @return $randomNum;
}

section {
  width: 100vw;
  height: 100vh;
  background: black;
  display: flex;
  justify-content: center;
  align-items: center;
  perspective: 400px;
  transform: translate3d(0,0,0);
}
.explosion-wrapper {
  $size: 30vw;
  width: $size;
  height: $size;
  position: relative;
  transform-style: preserve-3d;
  animation: orbit 30s linear;
  will-change: transform;
}
.ring-wrap {
  width: 100%;
  height: 100%;
  position: absolute;
  transform-style: preserve-3d;
  // background: rgba(red, .3);
  border-radius: 100%;
  
  @for $i from 1 through $numRings {
    &:nth-child(#{$i*1}) {
      will-change: transform;
      transform: rotateX(360/$numRings*$i*1deg);
      transform: rotateZ( randomNum(0, 360)*1deg ) rotateX( randomNum(0, 360)*1deg ) rotateY( randomNum(0, 360)*1deg );
      
      .ring-el {
        $delaySetting: ($pulseDur * .002) * $i + s;
        animation-delay: $delaySetting, $delaySetting;
        animation-fill-mode: both;
        font-weight: bold;
        font-size: 3vw;
        font-size: randomNum(2, 2.5)*1vw + randomNum(1, 10)*.01;
        // font-size: 2vw;
        text-transform: uppercase;
        // &:nth-child(even) {
        // 	animation-delay: ($pulseDur * .0025) * $i + 1.5s, ($pulseDur * .0025) * $i + 1.5s;				
        // }
        // animation-duration: 10/$i*10s + 2s;
      }
    }
  }
}
.ring {
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  
}
.ring-el {
    // mix-blend-mode: screen;
    will-change: transform;
    width: $dot-size;
    height: $dot-size;
    border-radius: 100%;
    // background: white;
    transition: transform .5s ease-in-out;
    transform: translateZ($start);	
    animation: pulse $pulseDur + s $ease infinite, fadeMe $pulseDur + s $ease;
    animation-fill-mode: both, both;
}

@keyframes orbit {
  0%   {transform: rotateX(0deg)    rotateY(0deg)   }
  100% {transform: rotateX(360deg)  rotateY(360deg) }
}
@keyframes pulse {
  0%    {transform: translateZ($start); color: $color2, 20%; }
  20%   {color: $color2 }
  50%   {transform: translateZ($end); color: $color1;}
  100%  {transform: translateZ($end); color: $color1;}
}
@keyframes fadeMe {
  0%     {opacity: 0}
  5%     {opacity: 1}
  40%    {opacity: 1}
  55%    {opacity: 0}
  100%   {opacity: 0}
}